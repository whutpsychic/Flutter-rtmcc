【关于考试答题组件的设计】
Designed by zbc
----------- 2021-09-01 -----------
大类：
一、题型
二、考试剩余时间计时器

一、题型
1.单选题
2.多选题
3.单题内多选/选择型填空题(空处必须是单选)
4.输入型填空题
5.判断题
6.简答题
7.排序题

整体设计：
1.答题模式设置为答一道，提交一道，并且无法回退到上一题。题与题之间独立并且没有任何连带关系。
2.题型提交时向后端发送的最小数据模型为 {本次考试id:xxxx,本题id:xxxx,本题答案:xxxx,本题提交时间:xxxx}。
   - 当中本题时间交由后端处置以便判断其是否为已超时的无效作答。
   - 本题答案的数据格式有待于后端开发者商榷。但组件的输出格式为固定的，稍后介绍，并在接入到具体app中时需额外开发一个中间件（仅改变数据格式），以适应不同app，进而使之成为可复用组件。
3.关于计时器：第一次从后端获得题时，获取本次考试还有多少时间，并计算时分秒在前端显示。当用户前后端切换app时，再说

---------------------------------------------------
1.单选题
题型最小模型数据：{question<String>: "xxxx",answers<List>: [xxx,xxx,xxx,...]}
各选项前面的ABCD由前端自行生成。
题型答案输出最小模型数据{answer<int>: x}

2.多选题
题型最小模型数据：{question<String>: "xxxx",answers<List>: [xxx,xxx,xxx,...]}
各选项前面的ABCD由前端自行生成。
题型答案输出最小模型数据{answer<List<int>>: [x,x,x]}

3.单题内多选
认为单题内多选题干就是一个字符串，其空出位置应由录题时自行添加。
题型最小模型数据：{question<String>: "xxxx",answers<List<List>>: [xxx,xxx,xxx,...]}
各选项前面的ABCD由前端自行生成。
题型答案输出最小模型数据{answer<List<int>>: [x,x,x]}

4.输入型填空题
认为填空题题干就是一个字符串，其空出位置应由录题时自行添加。
题型最小模型数据：{question<String>: "xxxx",blanks<int> x}
题型答案输出最小模型数据{answer<List<String>>: [x,x,x]}

5.判断题
题型最小模型数据：{question<String>: "xxxx"}
题型答案输出最小模型数据{answer<int>: 0/1}正确：1，错误：0

6.简答题
题型最小模型数据：{question<String>: "xxxx"}
题型答案输出最小模型数据{answer<String>: "xxxx"}

7.排序题
题型最小模型数据：{question<String>: "xxxx",answers<List>: [xxx,xxx,xxx,...]}
各选项前面的ABCD由前端自行生成。
题型答案输出最小模型数据{answer<List<int>>: [0,3,2,4,1]}




